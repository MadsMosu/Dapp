{"version":3,"sources":["webpack:///./components/BloodSampleForm.js?dc89"],"names":["BloodSampleForm","state","employeeID","componentName","volume","establishment","ABOSelection","ABOOptions","text","value","RhDGroup","expiryDate","cprValue","errorMessage","loading","onSubmit","event","preventDefault","setState","employeeWallet","ethers","Wallet","SampleStore","Contract","functions","addBloodSample","bloodSampleCount","then","props","mutate","variables","id","parseInt","type","person","window","alert","handleChange","e","name","data","cprOptions","i","allPersons","length","key","cpr","bind","marginBottom","createDonation","compose","graphql"],"mappings":"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","file":"4.1bc1c1f9f3f25de88b23.hot-update.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, Input, Button, Message, Dropdown, TextArea } from 'semantic-ui-react'\r\nimport ethers from 'ethers';\r\nimport provider from '../utils/configs/provider';\r\nimport abi from '../utils/abi/sampleStore';\r\nimport contractAddr from '../utils/addresses/sampleStore';\r\n\r\nimport {graphql, Mutation, compose} from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\nimport { graphiqlConnect } from 'apollo-server-express';\r\n\r\nclass BloodSampleForm extends Component {\r\n    state = {\r\n        employeeID: \"\",\r\n        componentName: \"\",\r\n        volume: \"\",\r\n        establishment: \"\",\r\n        ABOSelection: \"\",\r\n        ABOOptions: [{text: 'Group A', value: 'Group A'},{text: 'Group B', value: 'Group B'}, {text: 'Group AB', value: 'Group AB'}, {text: 'Group O', value: 'Group O'}],\r\n        RhDGroup: \"\",\r\n        expiryDate: \"\",\r\n        cprValue: \"\",\r\n        errorMessage: \"\",\r\n        loading: false\r\n    };\r\n    \r\n    onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        this.setState({loading: true, errorMessage: ''});\r\n        //blockchain\r\n        const employeeWallet = new ethers.Wallet(\"0x274d1e42f06076e6d3ef981f0c244750827ccf56b19768816618e9217129a030\", provider);\r\n        const SampleStore = new ethers.Contract(contractAddr, abi, employeeWallet); \r\n    \r\n        await SampleStore.functions.addBloodSample(this.state.componentName, this.state.volume, this.state.establishment, this.state.ABOSelection, this.state.RhDGroup, this.state.expiryDate);\r\n        \r\n\r\n        let bloodSampleCount;\r\n        await SampleStore.functions.bloodSampleCount().then(function(value) {\r\n            bloodSampleCount = value;\r\n        });\r\n                    \r\n        //db  \r\n        await this.props.mutate({\r\n            variables: {\r\n                id: parseInt(bloodSampleCount)+1,\r\n                type: \"Blood\",\r\n                person: this.state.cprValue,\r\n            }\r\n        });\r\n        this.setState({loading: false});   \r\n        window.alert('Succesfully added a new blood sample. Please wait for the transaction to finish.');  \r\n    };\r\n\r\n    handleChange = (e, { name, value }) => {\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    render() {\r\n        if(this.props.data.loading) {\r\n            return(\r\n                <div>Loading...</div>\r\n            );\r\n        } else {\r\n            let cprOptions = [];\r\n            for(var i = 0; i < this.props.data.allPersons.length; i++) {\r\n                cprOptions[i] = {key: this.props.data.allPersons[i].cpr, value: this.props.data.allPersons[i].cpr, text: this.props.data.allPersons[i].cpr};\r\n            }; \r\n        return(\r\n            <div>\r\n                <h3>Add a new Blood Sample</h3>\r\n                <Form onSubmit={this.onSubmit.bind(this)} error={!!this.state.errorMessage}>\r\n                    <h4>Sample</h4> \r\n                    <Form.Field inline>\r\n                        <Input label='Component Name' name='componentName' placeholder='Name' value={this.state.name} required={true} onChange={this.handleChange} />\r\n                    </Form.Field> \r\n                    <Form.Field inline>\r\n                        <Input label='Volume in ml' name='volume' placeholder='volume' value={this.state.name} required={true} onChange={this.handleChange} />\r\n                    </Form.Field> \r\n                    <Form.Field inline>\r\n                        <Input label='Establishment' name='establishment' placeholder='Establishment name' value={this.state.name} required={true} onChange={this.handleChange} />\r\n                    </Form.Field> \r\n                    <Dropdown name='ABOSelection' placeholder='ABO Group' selection options={this.state.ABOOptions} required={true} onChange={this.handleChange} style={{marginBottom: '20px'}}/>\r\n                    <Form.Field inline>\r\n                        <Input label='RhD Group' name='RhDGroup' placeholder='RhD Group' value={this.state.name} required={true} onChange={this.handleChange} />\r\n                    </Form.Field> \r\n                    <Form.Field inline>\r\n                        <Input label='Date of Expiry' name='expiryDate' placeholder='Expiry Date' value={this.state.name} required={true} onChange={this.handleChange} />\r\n                    </Form.Field> \r\n                    <Form.Field inline>\r\n                        <Dropdown name='cprValue' placeholder='CPR number of person' search selection options={cprOptions} required={true} onChange={this.handleChange}/>\r\n                    </Form.Field>\r\n                    <Message error header='Error!' content={this.state.errorMessage} />\r\n                    <Button loading={this.state.loading} primary>Submit Sample</Button>                                               \r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n    }\r\n}\r\n\r\nconst createDonation = gql`\r\n    mutation createDonation($id: Int!, $type: String!, $person: String!) {\r\n        createDonation(input: {id: $id, type: $type, person: $person}) {\r\n            id\r\n            type\r\n            person {\r\n                cpr\r\n                firstName\r\n                lastName\r\n            }\r\n        }\r\n    } \r\n`;\r\n\r\nconst allPersons = gql`\r\nquery allPersons { \r\n    allPersons {\r\n        cpr\r\n    }\r\n}\r\n`;\r\n\r\n        \r\nexport default compose(\r\ngraphql(allPersons,),\r\ngraphql(createDonation,),\r\n)(BloodSampleForm);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./components/BloodSampleForm.js"],"sourceRoot":""}