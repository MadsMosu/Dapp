{"version":3,"sources":["webpack:///./components/CellTissueSampleForm.js?3d4f"],"names":["CellTissueSampleForm","state","establishment","dateOfProcurement","placeOfProcurement","donationType","status","description","expiryDate","cprValue","errorMessage","loading","onSubmit","event","preventDefault","setState","employeeWallet","ethers","Wallet","SampleStore","Contract","functions","addCellTissueSample","cellTissueSampleCount","then","value","props","mutate","variables","id","parseInt","type","person","cpr","window","alert","handleChange","e","name","data","cprOptions","i","allPersons","length","key","text","bind","createDonation","compose","graphql"],"mappings":"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","file":"6.7dae68bcd8be28380ddd.hot-update.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, Input, Button, Message, Dropdown, TextArea } from 'semantic-ui-react'\r\nimport ethers from 'ethers';\r\nimport provider from '../utils/configs/provider';\r\nimport network from '../utils/configs/network';\r\nimport abi from '../utils/abi/sampleStore';\r\nimport contractAddr from '../utils/addresses/sampleStore';\r\n\r\nimport {graphql, Mutation, compose} from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\n\r\nclass CellTissueSampleForm extends Component {\r\n    state = {\r\n        establishment: \"\",\r\n        dateOfProcurement: \"\",\r\n        placeOfProcurement: \"\",\r\n        donationType: \"\",\r\n        status: \"\",\r\n        description: \"\",\r\n        expiryDate: \"\",\r\n        cprValue: \"\",\r\n        errorMessage: \"\",\r\n        loading: false\r\n    }\r\n  \r\n    onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        this.setState({loading: true, errorMessage: ''});\r\n        //blockchain\r\n        const employeeWallet = new ethers.Wallet(\"0x274d1e42f06076e6d3ef981f0c244750827ccf56b19768816618e9217129a030\", provider);\r\n        const SampleStore = new ethers.Contract(contractAddr, abi, employeeWallet); \r\n        await SampleStore.functions.addCellTissueSample(this.state.establishment, this.state.dateOfProcurement, this.state.placeOfProcurement, this.state.donationType, this.state.expiryDate, this.state.status, this.state.description);\r\n        \r\n        let cellTissueSampleCount;\r\n        await SampleStore.functions.cellTissueSampleCount().then(function(value) {\r\n            cellTissueSampleCount = value;\r\n        });\r\n                    \r\n        //db  \r\n        await this.props.mutate({\r\n            variables: {\r\n                id: parseInt(cellTissueSampleCount)+1,\r\n                type: \"Cell/tissue\",\r\n                person: this.state.cpr,\r\n            }\r\n        });\r\n        this.setState({loading: false});     \r\n        window.alert('Succesfully added a new cell or tissue sample. Please wait for the transaction to finish.'); \r\n    };\r\n\r\n    handleChange = (e, { name, value }) => {\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n\r\n    render() {\r\n        if(this.props.data.loading) {\r\n            return(\r\n                <div>Loading...</div>\r\n            );\r\n        } else {\r\n            let cprOptions = [];\r\n            for(var i = 0; i < this.props.data.allPersons.length; i++) {\r\n                cprOptions[i] = {key: this.props.data.allPersons[i].cpr, value: this.props.data.allPersons[i].cpr, text: this.props.data.allPersons[i].cpr};\r\n            }; \r\n        return(\r\n            <div>\r\n                <h3>Add a new Cell/Tissue Sample</h3>\r\n                <Form onSubmit={this.onSubmit.bind(this)} error={!!this.state.errorMessage}>\r\n                    <h4>Sample</h4>\r\n                    <Form.Field inline>\r\n                        <Input label='Establishment' name='establishment' placeholder='Establishment name' value={this.state.name} required={true} onChange={this.handleChange} />\r\n                    </Form.Field> \r\n                    <Form.Field inline>\r\n                        <Input label='Date of Procurement' name='dateOfProcurement' placeholder='Date of Procurement' value={this.state.name} required={true} onChange={this.handleChange} />\r\n                    </Form.Field> \r\n                    <Form.Field inline>\r\n                        <Input label='Place of Procurement' name='placeOfProcurement' placeholder='Place of Procurement' value={this.state.name} required={true} onChange={this.handleChange} />\r\n                    </Form.Field> \r\n                    <Form.Field inline>\r\n                        <Input label='Donation Type' name='donationType' placeholder='Donation Type' value={this.state.name} required={true} onChange={this.handleChange} />\r\n                    </Form.Field> \r\n                    <Form.Field inline>\r\n                        <Input label='Date of Expiry' name='expiryDate' placeholder='Expiry Date' value={this.state.name} required={true} onChange={this.handleChange} />\r\n                    </Form.Field>\r\n                    <Form.Field inline>\r\n                        <Input label='Status' name='status' placeholder='Status' value={this.state.name} required={true} onChange={this.handleChange} />\r\n                    </Form.Field> \r\n                    <Form.Field inline>\r\n                        <TextArea label='Description' name='description' placeholder='Description' value={this.state.name} required={true} onChange={this.handleChange} />\r\n                    </Form.Field>\r\n                    <Form.Field inline>\r\n                        <Dropdown name='cprValue' placeholder='CPR number of person' search selection options={cprOptions} required={true} onChange={this.handleChange}/>\r\n                    </Form.Field>\r\n                    <Message error header='Error!' content={this.state.errorMessage} />\r\n                    <Button loading={this.state.loading} primary>Submit</Button>                                                 \r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n    }\r\n}\r\n\r\nconst createDonation = gql`\r\n    mutation createDonation($id: Int!, $type: String!, $person: String!) {\r\n        createDonation(input: {id: $id, type: $type, person: $person}) {\r\n            id\r\n            type\r\n            person {\r\n                cpr\r\n                firstName\r\n                lastName\r\n            }\r\n        }\r\n    } \r\n`;\r\n\r\nconst allPersons = gql`\r\nquery allPersons { \r\n    allPersons {\r\n        cpr\r\n    }\r\n}\r\n`;\r\n\r\n//const EmployeeWithData = graphql(employee, {options: ({employeeID}) => ({variables: {employeeID}}),})(SampleForm);\r\n        \r\nexport default compose(\r\ngraphql(allPersons,),\r\ngraphql(createDonation,),\r\n)(CellTissueSampleForm);\n\n\n// WEBPACK FOOTER //\n// ./components/CellTissueSampleForm.js"],"sourceRoot":""}